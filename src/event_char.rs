use crate::status::Status;

pub enum EventChar {
    ToggleHidden,
    CopyPaste,
    CutPaste,
    NewDir,
    NewFile,
    Chmod,
    Exec,
    Goto,
    Rename,
    ClearFlags,
    ToggleFlag,
    Shell,
    DeleteFile,
    OpenFile,
    Help,
    Search,
    RegexMatch,
    Quit,
    FlagAll,
    ReverseFlags,
    Jump,
    History,
    NvimFilepicker,
    Sort,
    Symlink,
    Preview,
    Shortcut,
    Bulkrename,
    MarksNew,
    MarksJump,
}

impl EventChar {
    pub fn match_char(&self, tabs: &mut Status) {
        let current_status = tabs.selected();
        match *self {
            EventChar::ToggleHidden => current_status.event_toggle_hidden(),
            EventChar::CopyPaste => current_status.event_copy_paste(),
            EventChar::CutPaste => current_status.event_cur_paste(),
            EventChar::NewDir => current_status.event_new_dir(),
            EventChar::NewFile => current_status.event_new_file(),
            EventChar::Chmod => tabs.event_chmod(),
            EventChar::Exec => current_status.event_exec(),
            EventChar::Goto => current_status.event_goto(),
            EventChar::Rename => current_status.event_rename(),
            EventChar::ClearFlags => tabs.event_clear_flags(),
            EventChar::ToggleFlag => tabs.event_toggle_flag(),
            EventChar::Shell => current_status.event_shell(),
            EventChar::DeleteFile => current_status.event_delete_file(),
            EventChar::OpenFile => current_status.event_open_file(),
            EventChar::Help => current_status.event_help(),
            EventChar::Search => current_status.event_search(),
            EventChar::RegexMatch => current_status.event_regex_match(),
            EventChar::Quit => current_status.event_quit(),
            EventChar::FlagAll => tabs.event_flag_all(),
            EventChar::ReverseFlags => tabs.event_reverse_flags(),
            EventChar::Jump => tabs.event_jump(),
            EventChar::History => current_status.event_history(),
            EventChar::NvimFilepicker => current_status.event_nvim_filepicker(),
            EventChar::Sort => current_status.event_sort(),
            EventChar::Symlink => tabs.event_symlink(),
            EventChar::Preview => current_status.event_preview(),
            EventChar::Shortcut => current_status.event_shortcut(),
            EventChar::Bulkrename => tabs.event_bulkrename(),
            EventChar::MarksNew => tabs.event_marks_new(),
            EventChar::MarksJump => tabs.event_marks_jump(),
        }
    }
}
